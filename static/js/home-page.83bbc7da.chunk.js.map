{"version":3,"sources":["pages/HomePage/HomePage.jsx","services/ApiService/ApiService.jsx","img/no-img.jpg","components/MovieList/MovieList.jsx"],"names":["apiService","ApiService","HomePage","state","trading","isLoading","fetchTrading","setState","getTradingMovies","then","data","catch","e","console","log","message","finally","this","pathname","props","location","items","Component","axios","defaults","baseURL","get","response","results","query","movieId","cast","MovieList","className","map","el","to","id","src","poster_path","img","alt","title"],"mappings":"gNAIMA,EAAa,IAAIC,IACjBC,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,WAAW,G,EAKbC,aAAe,WACb,EAAKC,SAAS,CAAEF,WAAW,IAC3BL,EACGQ,mBACAC,MAAK,SAAAC,GACJ,EAAKH,SAAS,CAAEH,QAASM,OAE1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAEG,YACzBC,SAAQ,WACP,EAAKT,SAAS,CAAEF,WAAW,Q,uDAZjC,WACEY,KAAKX,iB,oBAcP,WACE,OACE,gCACE,+CACCW,KAAKd,MAAME,WAAa,2CACzB,cAAC,IAAD,CACEa,SAAUD,KAAKE,MAAMC,SAASF,SAC9BG,MAAOJ,KAAKd,MAAMC,iB,GA3BLkB,aAsCRpB,a,qGCzCfqB,IAAMC,SAASC,QAAU,+B,IAEJxB,E,gGACnB,WACE,OAAOsB,IACJG,IAAI,+DACJjB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKkB,a,+BAGpC,SAAkBC,GAChB,OAAON,IACJG,IADI,uEAE6DG,IAEjEpB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKkB,a,0BAEpC,SAAaE,GACX,OAAOP,IACJG,IADI,iBACUI,EADV,8CAEJrB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,U,6BAE/B,SAAgBoB,GACd,OAAOP,IACJG,IADI,iBACUI,EADV,sDAEJrB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKqB,U,6BAEpC,SAAgBD,GACd,OAAOP,IACJG,IADI,iBACUI,EADV,sDAEJrB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKkB,e,sCC/BvB,QAA0B,oC,gCCAzC,2BA6CeI,IAzCG,SAAC,GAAgC,IAA9BX,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,MAAOX,EAAe,EAAfA,SACjC,OACE,oBAAIe,UAAU,cAAd,SACGZ,EAAMa,KAAI,SAAAC,GACT,OACE,oBAAIF,UAAU,cAAd,SACE,cAAC,IAAD,CACEA,UAAU,cACVG,GAAI,CACFlB,SAAS,WAAD,OAAaiB,EAAGE,IACxBlC,MAAO,CACL0B,QACAX,aANN,SAUE,sBAAKe,UAAU,UAAf,UACE,qBACEA,UAAU,aACVK,IACEH,EAAGI,YAAH,0CACuCJ,EAAGI,aACtCC,IAENC,IAAI,KAEN,6BAAKN,EAAGO,cArBmBP,EAAGE","file":"static/js/home-page.83bbc7da.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from '../../components/MovieList/MovieList';\nimport ApiService from '../../services/ApiService/ApiService';\nconst apiService = new ApiService();\nclass HomePage extends Component {\n  state = {\n    trading: [],\n    isLoading: false,\n  };\n  componentDidMount() {\n    this.fetchTrading();\n  }\n  fetchTrading = () => {\n    this.setState({ isLoading: true });\n    apiService\n      .getTradingMovies()\n      .then(data => {\n        this.setState({ trading: data });\n      })\n      .catch(e => console.log(e.message))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n  render() {\n    return (\n      <div>\n        <h2>Trading today</h2>\n        {this.state.isLoading && <p>Loading...</p>}\n        <MovieList\n          pathname={this.props.location.pathname}\n          items={this.state.trading}\n        />\n      </div>\n    );\n  }\n}\nHomePage.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object,\n};\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport default class ApiService {\n  getTradingMovies() {\n    return axios\n      .get('/trending/all/week?api_key=3e91b5df25eb12a3a6040f68d69bdd3f')\n      .then(response => response.data.results);\n  }\n\n  getMoviesOnSearch(query) {\n    return axios\n      .get(\n        `/search/movie?api_key=3e91b5df25eb12a3a6040f68d69bdd3f&query=${query}`,\n      )\n      .then(response => response.data.results);\n  }\n  getMovieById(movieId) {\n    return axios\n      .get(`/movie/${movieId}?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data);\n  }\n  getMovieCredits(movieId) {\n    return axios\n      .get(`/movie/${movieId}/credits?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data.cast);\n  }\n  getMovieReviews(movieId) {\n    return axios\n      .get(`/movie/${movieId}/reviews?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data.results);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/no-img.a973ad85.jpg\";","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport img from '../../img/no-img.jpg';\n\nconst MovieList = ({ items, query, pathname }) => {\n  return (\n    <ul className=\"previewList\">\n      {items.map(el => {\n        return (\n          <li className=\"previewItem\" key={el.id}>\n            <Link\n              className=\"previewLink\"\n              to={{\n                pathname: `/movies/${el.id}`,\n                state: {\n                  query,\n                  pathname,\n                },\n              }}\n            >\n              <div className=\"wrapper\">\n                <img\n                  className=\"previewImg\"\n                  src={\n                    el.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${el.poster_path}`\n                      : img\n                  }\n                  alt=\"\"\n                />\n                <h3>{el.title}</h3>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.array,\n  query: PropTypes.string,\n  pathname: PropTypes.string,\n};\nexport default MovieList;\n"],"sourceRoot":""}