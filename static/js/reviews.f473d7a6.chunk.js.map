{"version":3,"sources":["components/Reviews/Reviews.jsx","services/ApiService/ApiService.jsx"],"names":["apiService","ApiService","Reviews","state","reviews","fetchReviews","id","props","match","params","movieId","getMovieReviews","then","data","setState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","this","className","map","author","content","length","Component","axios","defaults","baseURL","get","response","results","query","cast"],"mappings":"wMAGMA,EAAa,IAAIC,IAEjBC,E,4MACJC,MAAQ,CACNC,QAAS,I,EAMXC,aAAe,WACb,IAAMC,EAAK,EAAKC,MAAMC,MAAMC,OAAOC,QACnCV,EAAWW,gBAAgBL,GAAIM,MAAK,SAAAC,GAClC,EAAKC,SAAS,CACZV,QAASS,IAEXE,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,e,uDAZhB,WACEC,KAAKjB,iB,oBAeP,WACE,OACE,qCACE,oBAAIkB,UAAU,cAAd,SACGD,KAAKnB,MAAMC,QAAQoB,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACtB,qBAAIH,UAAU,cAAd,UACE,oBAAGA,UAAU,eAAb,qBAAqCE,KACrC,mBAAGF,UAAU,cAAb,SAA4BG,MAFGpB,QAMN,IAA9BgB,KAAKnB,MAAMC,QAAQuB,QAClB,iF,GAhCYC,aA4CP1B,a,qGC/Cf2B,IAAMC,SAASC,QAAU,+B,IAEJ9B,E,gGACnB,WACE,OAAO4B,IACJG,IAAI,+DACJpB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKqB,a,+BAGpC,SAAkBC,GAChB,OAAON,IACJG,IADI,uEAE6DG,IAEjEvB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKqB,a,0BAEpC,SAAaxB,GACX,OAAOmB,IACJG,IADI,iBACUtB,EADV,8CAEJE,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,U,6BAE/B,SAAgBH,GACd,OAAOmB,IACJG,IADI,iBACUtB,EADV,sDAEJE,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKuB,U,6BAEpC,SAAgB1B,GACd,OAAOmB,IACJG,IADI,iBACUtB,EADV,sDAEJE,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKqB,e","file":"static/js/reviews.f473d7a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ApiService from '../../services/ApiService/ApiService';\nconst apiService = new ApiService();\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n  componentDidMount() {\n    this.fetchReviews();\n  }\n\n  fetchReviews = () => {\n    const id = this.props.match.params.movieId;\n    apiService.getMovieReviews(id).then(data => {\n      this.setState({\n        reviews: data,\n      });\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    });\n  };\n  render() {\n    return (\n      <>\n        <ul className=\"reviewsList\">\n          {this.state.reviews.map(({ id, author, content }) => (\n            <li className=\"reviewsItem\" key={id}>\n              <p className=\"reviewAuthor\">Author: {author}</p>\n              <p className=\"reviewsText\">{content}</p>\n            </li>\n          ))}\n        </ul>\n        {this.state.reviews.length === 0 && (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </>\n    );\n  }\n}\nReviews.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport default class ApiService {\n  getTradingMovies() {\n    return axios\n      .get('/trending/all/week?api_key=3e91b5df25eb12a3a6040f68d69bdd3f')\n      .then(response => response.data.results);\n  }\n\n  getMoviesOnSearch(query) {\n    return axios\n      .get(\n        `/search/movie?api_key=3e91b5df25eb12a3a6040f68d69bdd3f&query=${query}`,\n      )\n      .then(response => response.data.results);\n  }\n  getMovieById(movieId) {\n    return axios\n      .get(`/movie/${movieId}?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data);\n  }\n  getMovieCredits(movieId) {\n    return axios\n      .get(`/movie/${movieId}/credits?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data.cast);\n  }\n  getMovieReviews(movieId) {\n    return axios\n      .get(`/movie/${movieId}/reviews?api_key=3e91b5df25eb12a3a6040f68d69bdd3f`)\n      .then(response => response.data.results);\n  }\n}\n"],"sourceRoot":""}